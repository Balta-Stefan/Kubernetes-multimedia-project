# Variables
prefix.pending=pending/
prefix.finished=finished/

# Spring
server.port=${BACKEND_PORT}
spring.datasource.url=${MYSQL_CONNECTION_STRING}
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
passwordencoder.strength=10

# MinIO
# http://minio.object-storage.svc.cluster.local/user-1/pending/Wifi%20adapter%20location.txt?
minio.endpoint=${MINIO_ENDPOINT}
minio.port=${MINIO_PORT}
minio.access_key=${MINIO_ACCESS_KEY}
minio.secret_access_key=${MINIO_SECRET}
minio.presigned-url-expiration-hours=1

# Kafka
kafka.topic.pending=pending
kafka.topic.processing=processing
kafka.topic.finished=finished
kafka.topic.canceled=canceled
kafka.listener.group-id=${BACKEND_GROUP_ID}

spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVER}
#my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
  # org.apache.kafka.common.serialization.JsonSerializer

spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVER}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=pisio.common.model.*